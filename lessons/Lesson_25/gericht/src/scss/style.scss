@use "sass:math"; /*  подключение математического модуля с помощью которого будем использовать деление в css */

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
//&display=swap - добавить при подключении через плагин
@import url("https://fonts.googleapis.com/css?family=Open+Sans:regular,600,italic&display=swap");
@import "base/fonts";

// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
@import "base/icons"; /* подробно с 1:00:00 https://www.youtube.com/watch?v=GAlIlUKmTf0 */
// https://icomoon.io/app/#/select

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: "Open Sans", sans-serif;
$fontSize: rem(16); // где 14(px) - размер шрифта по умолчанию из макета

// Основной цвет шрифта
$mainColor: #aaa;
$mainHover: #dcca87;

// НАСТРОЙКИ ===============================================================================================================================================================================================================================================================================================
// Минимальная ширина страницы
$minWidth: 320; /* минимальная ширина экрана смартфона. */
// Ширина полотна (макета)
$maxWidth: 1920; /* максимальная ширина полотна макета, это не ограничивающий контейнер, это сколько дизайнер дал ширины всего макета */
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1300;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 30; /* отступы безопасности что бы контейнер начал сужаться раньше, до того как стенки браузера стукнуться об него. */

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// Ширина страбатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении. То есть этот брейкпоинт сработает тогда когда стенки браузера коснуться отступа безопасности - это случится на 1300px.
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Обнуление и общие параметры ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null"; /* оно должно здесь находится что бы считать вышеуказанные переменные */

body {
	color: $mainColor;
	background-color: #0c0b08;
	// Скролл заблокирован
	.lock & {
		// отключается скролл
		overflow: hidden;
		touch-action: none;
	}
}

// Оболочка ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
	min-height: 100%;
	display: flex;
	flex-direction: column; /* нужен что бы прибить подвал к низу */
	overflow: hidden; /* что бы у нас не появлялся горизонтальный скролл */
	// Сайт загружен
	.loaded & {
	}
	// Прижимаем footer
	> main {
		flex: 1 1 auto; /* для того что бы футер был прижат к низу */
	}
	// Фикс для слайдеров
	> * {
		// у всех объектов которые на первой вложености внутри display: flex; устанавливаем 	min-width: 0; - это нужно для лечения проблемы слайдеров во флекс и грид элементов.
		// подробнее на уроке по свайперу
		min-width: 0;
	}
}

// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
// Будем верстать без брейк-поинтов
@if ($responsiveType==1) {
	// Отзывчивая
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box; /* для того что бы отступы не учитывались */
			margin: 0 auto; /* что бы выстроить наш контейнер по центру */
		}
		@if ($containerPadding>0) {
			padding: 0 rem(math.div($containerPadding, 2));
		}
	}
	[class*="__container_wide"] {
		max-width: rem(1680); /* построим еще один ограничивающий контейнер который будет шире то есть - 1680px */
	}
} @else {
	// По брейк-поинтам
	[class*="__container"] {
		margin: 0 auto;
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
		} @else {
			@if ($containerPadding>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
		@media (max-width: $pc) {
			max-width: rem(970);
		}
		@media (max-width: $tablet) {
			max-width: rem(750);
		}
		@media (max-width: $mobile) {
			max-width: none;
			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
	}
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомагательных классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base"; /* всякие табы, спойлеры, то есть базовые стили */

// Подключение стилей отдельных блоков
@import "header";
@import "footer";

// Подключение стилей отдельных страниц
@import "home";
