/* УРОК №16 
https://youtu.be/kcP_9sMW3xc
  */
/* 
&display=swap
&subset=cyrillic-ext 
*/
@import url("https://fonts.googleapis.com/css?family=Roboto:regular,500,700,900&display=swap");

/* ОБНУЛЕНИЕ СТИЛЕЙ */
*,
*::before,
*::after {
	margin: 0;
	padding: 0;
	border: 0;
	box-sizing: border-box;
}
li {
	list-style: none;
}
a,
a:visited {
	text-decoration: none;
}
a:hover {
	text-decoration: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
	font-weight: inherit;
	font-size: inherit;
}
img {
	vertical-align: top;
}
html,
body {
	height: 100%;
}
html {
	/* по умолчанию */
	/* font-size: 16px;  */
}
body {
	line-height: 1;
	color: #fff;
	background-color: #333;
	font-family: "Roboto";
}
.wrapper {
	min-height: 100%;
	overflow: hidden;
	display: flex;
	flex-direction: column;
}
/* ------------------------------ */
.main {
	flex-grow: 1;
	padding: 30px;
}

[class*="__container"] {
	max-width: 1050px;
	margin: 0px auto;
	padding: 0px 15px;
}

.main__form {
	margin: 0px 0px 100px 0px;
}
/* ---------------------------------------------------------------------------------- */

.form {
}
.form__line {
}
.form__line:not(:last-child) {
	margin: 0px 0px 20px 0px;
}
.form__label {
	display: block;
	margin: 0px 0px 10px 0px;
}
.form__input {
	height: 30px;
	width: 100%;
	padding: 0px 10px; /* падинг сверху снизу не нужно задавать, текст будет выравниваться по середине сам, достаточно задать просто высоту*/
}
.form__input:focus::placeholder {
	transform: translate(-100%, 0px); /* чтобы при клике на инпут placeholder уезжал влево */
	opacity: 0;
}
.form__input::placeholder {
	color: red;
	transition: all 0.3s ease 0s;
}
/* ---------------------------------------------------------------------------------- */

.form__textarea {
	width: 100%;
	height: 180px;
	padding: 15px;
	resize: vertical; /* можно мышкой менять размер по высоте*/
	resize: none; /* если так, то нельзя будет менять размер, а можно будет скролить*/
}
/* ---------------------------------------------------------------------------------- */

.form__button {
	padding: 10px 15px;
	cursor: pointer;
}
/* ---------------------------------------------------------------------------------- */

.form__select {
	width: 100%;
	height: 30px;
	padding: 0px 10px;
}
/* ---------------------------------------------------------------------------------- */

.file {
	position: relative;
}
.file__input {
	position: absolute;
	top: 0;
	left: 0;
	opacity: 0; /* скрываем инпут что бы сделать кнопкой   label */
	font-size: 0; /* а для label cursor: pointer;, тогда курсор будет правильно работать */
}
.file__label {
	background-color: green;
	border-radius: 20px;
	padding: 10px 15px;
	cursor: pointer; /* добавляем инпуту font-size: 0; */
}
/* ---------------------------------------------------------------------------------- */

.checkbox {
	position: relative;
}
.checkbox__input {
	cursor: pointer;
	position: absolute;
	top: 0;
	left: 0;
	opacity: 0;
}
.checkbox__input:focus + .checkbox__label {
	outline: 1px solid #fff;
}
.checkbox__input:checked + .checkbox__label::before {
	background-color: green;
}
.checkbox__label {
	display: inline-flex;
	column-gap: 10px;
	align-items: center;
	cursor: pointer;
}
.checkbox__label::before {
	cursor: pointer;
	align-self: flex-start;
	flex: 0 0 20px;
	min-width: 20px; /* что бы outline был на всю ширину контента, и обязательно нужно указать flex-shrink:1; что бы не сплюснулся квадратик если этому объекту добавить контента. */
	height: 20px;
	content: "";
	background-color: #fff;
	border-radius: 5px;
}
/* ---------------------------------------------------------------------------------- */

.radiobuttons {
}
.radiobuttons__item {
	position: relative;
}
.radiobuttons__item:not(:last-child) {
	margin: 0px 0px 10px 0px;
}
.radiobuttons__input {
	cursor: pointer;
	position: absolute;
	top: 0;
	left: 0;
	opacity: 0;
}
.radiobuttons__input:focus + .radiobuttons__label::before {
	box-shadow: 0 0 10px rgb(200, 255, 0);
}
.radiobuttons__input:checked + .radiobuttons__label::after {
	transform: scale(1);
}

.radiobuttons__label {
	display: inline-flex;
	column-gap: 10px;
	align-items: center; /* текст будет по центру */
	cursor: pointer;
	position: relative;
}
.radiobuttons__label::before {
	cursor: pointer;
	align-self: flex-start; /* но если текста будет много  */
	flex: 0 0 20px; /*  что бы не происходило схлопывания, что бы не сплюснуло кубик если добавить больше текста */
	height: 20px;
	content: "";
	background-color: #fff;
	border-radius: 50%;
}
.radiobuttons__label::after {
	width: 10px;
	content: "";
	transition: transform 0.3s ease 0s;
	position: absolute;
	height: 10px;
	background-color: red;
	border-radius: 50%;
	top: 5px;
	left: 5px;
	transform: scale(0);
}
/* ---------------------------------------------------------------------------------- */
.switcher {
	position: relative;
}
.switcher__input {
	cursor: pointer;
	position: absolute;
	top: 0;
	left: 0;
	opacity: 0;
}
.switcher__input:focus + .switcher__label {
	outline: 1px solid green;
}
.switcher__input:checked + .switcher__label {
	/* при нажатии на switcher */
	background-color: green;
}
.switcher__input:checked + .switcher__label::before {
	/* при нажатии на switcher */
	background-color: green;
	left: 25px; /* шарик смещается  */
}
.switcher__label {
	transition: background-color 0.3s ease 0s;
	position: relative;
	display: inline-block;
	cursor: pointer;
	background-color: #fff;
	width: 50px;
	height: 20px;
	border-radius: 10px;
}
.switcher__label::before {
	/* сама кнопка которая будет смещаться влево-вправо */
	transition: transform, left 0.3s ease 0s;
	cursor: pointer;
	width: 25px;
	height: 25px;
	content: "";
	position: absolute;
	left: 0;
	top: 50%;
	transform: translate(0px, -50%);
	background-color: #fff;
	box-shadow: 0 0 5px rgba(0, 0, 0, 1.3);
	border-radius: 50%;
}
